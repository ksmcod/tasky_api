// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum TeamRole {
  CREATOR
  MEMBER
}

model User {
  id       String  @id @default(auto()) @map("_id") @db.ObjectId
  name     String
  email    String  @unique
  password String? // Optional. Null if using OAuth
  image    String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  provider   String? // OAuth provider
  providerId String? // OAuth provider ID

  // Relations
  teamsCreated Team[]       @relation("TeamCreator")
  memberships  TeamMember[]
}

model Team {
  id          String  @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  description String?

  joinCode String @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relationships
  creatorId String       @db.ObjectId
  creator   User         @relation("TeamCreator", fields: [creatorId], references: [id], onDelete: Restrict)
  members   TeamMember[]

  @@index([creatorId])
}

model TeamMember {
  id     String @id @default(auto()) @map("_id") @db.ObjectId
  userId String @db.ObjectId
  teamId String @db.ObjectId

  // Relations
  user User @relation(fields: [userId], references: [id], onDelete: Restrict)
  team Team @relation(fields: [teamId], references: [id], onDelete: Restrict)

  role TeamRole @default(MEMBER)

  joinedAt  DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([userId, teamId])
  @@index([userId])
  @@index([teamId])
}
